---
interface PriceItem {
  name: string;
  price?: number;
  from?: number;
  to?: number;
  unit?: string;
  note?: string;   // z.B. "from", "per view", "60 € total"
  link?: string;
}
interface PriceCategory {
  title: string;
  subtitle?: string;
  items: PriceItem[];
}
interface PricesData {
  currency?: string;
  categories: PriceCategory[];
}

const { prices } = Astro.props as { prices: PricesData };
const COLS = ["60%", "40%"]; // Type / Price(+Note)
const title = "Pricing"
const currency = prices.currency ?? "EUR";
const fmt = (value?: number) => {
  if (value == null) return "–";
  try { return new Intl.NumberFormat("de-DE", { style: "currency", currency }).format(value); }
  catch { return `${value} ${currency}`; }
};
const formatPrice = (it: PriceItem) => {
  if (it.price != null) return fmt(it.price);
  if (it.from != null && it.to != null) return `${fmt(it.from)} – ${fmt(it.to)}`;
  if (it.from != null) return `ab ${fmt(it.from)}`;
  return "auf Anfrage";
};
---
<section class="content-head section">
  <h1>{title}</h1>
  <p>Here you gonna find the detailed pricing for each category.<br>
  Shown prices are approximates and final prices may vary depending on the effort needed.</p>
</section>

<section class="content-layout section">
  {prices.categories.map((cat) => (
    <section class="table__section content-card">
      <h2 class="table__title">{cat.title}</h2>
      {cat.subtitle && <p class="table__subtitle">{cat.subtitle}</p>}
      <div class="table__wrap">
        <table class="table">
          <colgroup>
            <col style={`width:${COLS[0]}`} />
            <col style={`width:${COLS[1]}`} />
          </colgroup>

          <thead>
            <tr>
              <th class="table__th table__th--left">Type</th>
              <th class="table__th table__th--right">Price</th>
            </tr>
          </thead>

          <tbody>
            {cat.items.map((it, i) => (
              <tr class={`table__tr ${i % 2 ? "is-alt" : ""}`}>
                <td class="table__td">
                  {it.link ? <a href={it.link} rel="noopener" target="_blank">{it.name}</a> : it.name}
                  {it.unit && <span class="table__unit"> / {it.unit}</span>}
                </td>

                <td class="table__td table__td--right">
                  {it.note && <span class="table__note-chip">{it.note}</span>}
                  <span class="table__price">{formatPrice(it)}</span>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>
    </section>
  ))}
</section>
