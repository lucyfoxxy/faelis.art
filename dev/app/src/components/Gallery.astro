---
type Props = { albumSlug: string; title?: string }
const { albumSlug, title = 'Galerie' } = Astro.props as Props;
---

<section>
  <h1>{title}</h1>
  <!-- wir „verdraten“ den Slug als data-Attribut, damit das Client-Script ihn sicher hat -->
  <div id="gallery" data-slug={albumSlug} class="grid"></div>
</section>

<script is:inline>
(async () => {
  const root = document.getElementById('gallery');
  if (!root) return;                        // TS happy

  const slug = root.dataset.slug;
  if (!slug) { root.textContent = 'Kein Album-Slug übergeben.'; return; }

  const url = `/data/galleries/${slug}.json`;   // <-- kein {albumSlug} im JS, sondern variable

  try {
    const r = await fetch(url, { cache: 'no-store' });
    if (!r.ok) throw new Error('HTTP ' + r.status);
    const data = await r.json();
    const assets = Array.isArray(data.assets) ? data.assets : [];

    if (assets.length === 0) {
      root.textContent = 'Keine Bilder gefunden.';
      return;
    }

    for (const a of assets) {
      const fig = document.createElement('figure');
      fig.style.cssText = 'aspect-ratio:4/3;border-radius:12px;overflow:hidden;background:#111;margin:0';

      const img = document.createElement('img');
      img.src = a.thumb || a.src;
      img.alt = a.filename || '';
      img.loading = 'lazy';
      img.style.cssText = 'width:100%;height:100%;object-fit:cover;display:block';

      fig.appendChild(img);
      root.appendChild(fig);
    }
  } catch (e) {
    console.error('Gallery load failed:', e);
    root.textContent = 'Fehler beim Laden der Galerie.';
  }
})();
</script>
